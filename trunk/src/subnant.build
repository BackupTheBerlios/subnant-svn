<?xml version="1.0" ?>
<!--
Copyright (c) 2005 Simon McKenna

Licensed under the GNU General Public License
http://www.gnu.org/copyleft/gpl.html

$Id$ 
-->
<project name="subnant" default="test" basedir=".">

    <description>Subversion adminstration tasks handled using NAnt - http://subnant.berlios.de</description>   

    <target name="bugtraq" depends="init,init-workingcopy" description="Set bugtraq props in current wc or -D:wc=/path/to/wc">
        <nant buildfile="targets/bugtraq.build"/>
    </target>

    <target name="commit-access" depends="init,init-repository" description="Control access to repository using pre-commit hook">
        <nant buildfile="targets/commit-access.build"/>
    </target>

    <target name="commit-email" depends="init,init-repository" description="Generate email from commits using post-commit hook">
        <nant buildfile="targets/commit-email.build"/>
    </target>

    <target name="create" depends="init,init-repository" description="Create repositories -D:repos=repo1,repo2">
        <nant buildfile="targets/create.build"/>
    </target>

    <target name="dump" depends="init,init-repository" description="Dump repositories with optional -D:repos=repo1,repo2">
        <nant buildfile="targets/dump.build"/>
    </target>

    <target name="show-config" depends="init,init-repository" description="Show subnant.config with optional -D:config=file.config">
        <nant buildfile="targets/show-config.build"/>
    </target>

    <target name="test" depends="init,init-workingcopy,init-repository" description="Test main targets with optional -D:target=dump,verify">
        <nant buildfile="targets/test.build"/>
    </target>

    <target name="verify" depends="init,init-repository" description="Verify repositories with optional -D:repos=repo1,repo2">
        <nant buildfile="targets/verify.build"/>
    </target>

    <target name="init">
        <!-- Assign default config file unless subnant.config already defined as command-line parameter -->
        <property name="subnant.config" value="${path::combine(project::get-buildfile-path(),'../../conf/subnant.config')}"
            unless="${property::exists('subnant.config')}"/>
        <fail unless="${file::exists(subnant.config)}" message="Could not find ${subnant.config}"/>
        <xmlpeek file="${subnant.config}" xpath="/subnant/svn_bindir" property="svn_bindir"/>
    </target>

    <target name="init-repository">
        <xmlpeek file="${subnant.config}" xpath="/subnant/svn_repos/svnroot" property="svnroot"/>
        <fail unless="${directory::exists(svnroot)}" message="Repository root directory doesn't exist: ${svnroot}"/>
    </target>

    <target name="init-workingcopy">
    </target>

</project>