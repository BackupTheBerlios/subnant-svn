<?xml version="1.0" ?>
<!--
Copyright (C) 2005 Simon McKenna

Licensed under the GNU General Public License
http://www.gnu.org/copyleft/gpl.html

$Id$ 
-->
<project name="migrate" default="migrate">

    <target name="migrate" depends="init">
        <foreach item="String" delim="," in="${migrate-repos}" property="repos">
            <nant buildfile="backup.build" target="backup"/>
            <nant buildfile="create.build" target="create">
                <properties>
                    <property name="svn-root"   value="${to-svn-root}"/>
                    <property name="svn-bindir" value="${to-svn-bindir}"/>
                </properties>
            </nant>
            <nant buildfile="load.build" target="load">
                <properties>
                    <property name="dumps"      value="${dump-file}"/>
                    <property name="svn-root"   value="${to-svn-root}"/>
                    <property name="svn-bindir" value="${to-svn-bindir}"/>
                </properties>
            </nant>
            <nant buildfile="verify.build" target="verify">
                <properties>
                    <property name="svn-root"   value="${to-svn-root}"/>
                    <property name="svn-bindir" value="${to-svn-bindir}"/>
                </properties>
            </nant>
        </foreach>
        <echo file="${subnant-output}" append="true" message="${string::pad-right('Migration complete',60,' ')}(${subnant::get-elapsed-time(migration-started)})"/>
     </target>

    <target name="init">
        <property name="migration-started" value="${datetime::get-ticks(datetime(now())}"/>
        <fail message="to-svn-root not set" unless="${property::exists('to-svn-root')}"/>
        <fail message="to-svn-root doesn't exist: ${to-svn-root}" unless="${directory::exists(to-svn-root)}"/>
        <!-- Use default svn-bindir unless specifed, then verify it exists -->
        <property name="to-svn-bindir" value="${svn-bindir}" unless="${property::exists('to-svn-bindir')}"/>
        <fail message="to-svn-bindir doesn't exist: ${to-svn-bindir}" unless="${directory::exists(to-svn-bindir)}"/>
        <!-- Take a copy of repos as repos is used down the chain (create,load,verify) -->
        <property name="migrate-repos" value="${repos}"/>
    </target>

    <target name="help">
        <echo level="Warning">
            <![CDATA[migrate: usage: subnant migrate -D:to-svn-root=</path/to-svn-root> [-D:<option>=<value>]

Copy repositories from one <svn-root> location to another using
Subnant targets: backup, create, load and verify

If repos option not set, all repositories under svn-root are copied

Source repositories are not removed unless delete-source is set true

All options that apply to Subnant create target apply to migrate target

Allows for different Subversion binary version to be used on destination
repository targets (create, load and verify) using to-svn-bindir option

Required:   
to-svn-root     destination repository root directory

Options:
repos           comma separated list of repositories to move
svn-root        source repository root directory
svn-bindir      source repository subversion binary directory
to-svn-bindir   destination repository subversion binary directory
delete-source   remove source repositories after copy: true or false 

Examples:
subnant copy -D:to-svn-root=/svnroot/dest
subnant copy -D:to-svn-root=/svnroot/dest -D:repos=repo1,repo2
subnant copy -D:to-svn-root=/svnroot/dest -D:to-svn-bindir=/tmp/svn2/bin
            ]]>
        </echo>
    </target>

</project>