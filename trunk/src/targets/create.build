<?xml version="1.0" ?>
<!--
Copyright (C) 2005 Simon McKenna

Licensed under the GNU General Public License
http://www.gnu.org/copyleft/gpl.html

$Id$ 
-->
<project name="create" default="create">

    <target name="create" depends="init" description="Create Subversion repositories">
        <foreach item="String" delim="," in="${repos}" property="repo">
            <property name="repo" value="${string::trim(repo)}"/>        
            <write>Creating ${fs-type} repository '${repo}' under ${svn-root}</write>
            <exec program="${svnadmin}" failonerror="false" resultproperty="result">
                <arg value="create"/>
                <arg value="--bdb-txn-nosync" if="${fs-type=='bdb' and bdb-txn-nosync=='true'}"/>
                <arg value="--bdb-log-keep"   if="${fs-type=='bdb' and bdb-log-keep=='true'}"/>
                <arg value="--config-dir"     if="${string::get-length(config-dir)>0}"/>
                <arg value="${config-dir}"    if="${string::get-length(config-dir)>0}"/>
                <arg value="--fs-type"/>
                <arg value="${fs-type}"/>
                <arg value="${path::combine(svn-root,repo)}"/>
            </exec>
            <echo file="${log-file}" append="true" if="${result=='0'}" message="Created repository '${repo}'"/>  
            <echo file="${log-file}" append="true" if="${result!='0'}" message="Failed to create repository '${repo}'"/>  
        </foreach>
    </target>

    <target name="init">
        <!-- Assign config values to properties so long as they haven't been passed as a command-line parameter --> 
        <xmlpeek file="${config}" xpath="/configuration/svn-repos/fs-type"        property="fs-type"        unless="${property::exists('fs-type')}"/>
        <xmlpeek file="${config}" xpath="/configuration/svn-repos/config-dir"     property="config-dir"     unless="${property::exists('config-dir')}"/>
        <!-- Ready properties --> 
        <property name="svnadmin"       value="${path::combine(svn-bindir,'svnadmin')}"/>
        <property name="fs-type"        value="${string::trim(string::to-lower(fs-type))}"/>
        <property name="config-dir"     value="${string::trim(config-dir)}"/>
        <!-- Verify properties --> 
        <fail if="${property::exists('repos')==false}" message="Can't create repository as 'repos' property not defined"/>
        <fail if="${fs-type!='bdb' and fs-type!='fsfs'}" message="fs-type must be 'bdb' or 'fsfs'"/>
        <fail if="${string::get-length(config-dir)>=0 and directory::exists(config-dir)==false}" message="config-dir ${config-dir} directory doesn't exist"/>
        <!-- Assign, ready and verify bdb properties if needed --> 
        <if test="${fs-type=='bdb'}"> 
            <xmlpeek file="${config}" xpath="/configuration/svn-repos/bdb-log-keep"   property="bdb-log-keep"   unless="${property::exists('bdb-log-keep')}"/>
            <xmlpeek file="${config}" xpath="/configuration/svn-repos/bdb-txn-nosync" property="bdb-txn-nosync" unless="${property::exists('bdb-txn-nosync')}"/>
            <property name="bdb-log-keep"   value="${string::trim(string::to-lower(bdb-log-keep))}"/>
            <property name="bdb-txn-nosync" value="${string::trim(string::to-lower(bdb-txn-nosync))}"/>
            <fail if="${bdb-log-keep!='true' and bdb-log-keep!='false'}" message="bdb-log-keep ${bdb-log-keep} must be 'true' or 'false'"/>
            <fail if="${bdb-txn-nosync!='true' and bdb-txn-nosync!='false'}" message="bdb-txn-nosync ${bdb-txn-nosync} must be 'true' or 'false'"/>
        </if>   
    </target>   

    <target name="help">
<write><![CDATA[Create repositories using svnadmin

If no options are passed, use values defined in subnant.config

Required:   
repos           comma separated list of repositories under 'svn-root'
   
Options:
svn-root        override subnant.config with new repository root directory
svn-bindir      override subnant.config with new subversion binary directory
fs-type         type of repository 'bdb' or 'fsfs'
config-dir      read user configuration files from this directory
bdb-log-keep    automatic log file removal [Berkeley DB] 'true' or 'false'
bdb-txn-nosync  fsync at transaction commit [Berkeley DB] 'true' or 'false'

Examples:
subnant create -D:repos=repo1,repo2
subnant create -D:repos=repo1 -D:svn-root=/svnroot
subnant create -D:repos=repo1 -D:fs-type=fsfs]]></write>
    </target>
   
</project>
