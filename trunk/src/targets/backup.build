<?xml version="1.0" ?>
<!--
Copyright (C) 2005 Simon McKenna

Licensed under the GNU General Public License
http://www.gnu.org/copyleft/gpl.html

$Id$ 
-->
<project name="backup" default="backup">

    <target name="backup" depends="init">
        <foreach item="String" delim="," in="${backup-repos}" property="repos">
            <property name="exec-started" value="${datetime::now()}"/>
            <echo level="Warning" message="Hotcopying repository ${repos}"/>
            <property name="execstart" value="${datetime::now()}"/>
            <exec program="${svnadmin}" failonerror="true" append="false">
                <arg value="hotcopy"/>
                <arg value="${path::combine(svn-root,repos)}"/>
                <arg value="${path::combine(hotcopy-root,repos)}"/>
                <arg value="--clean-logs"/>
            </exec>
            <echo file="${subnant-output}" append="true" message="${string::pad-right('Hotcopied repository '+repos,60,' ')}(${subnant::get-elapsed-time(exec-started,datetime::now())})"/>
            <nant buildfile="verify.build" target="verify">
                <properties>
                    <property name="svn-root" value="${hotcopy-root}"/>
                </properties>
            </nant>
            <nant buildfile="dump.build" target="dump">
                <properties>
                    <property name="svn-root" value="${hotcopy-root}"/>
                </properties>
            </nant>
        </foreach>
        <!-- Reset repos from backup-repos -->
        <property name="repos" value="${backup-repos}"/>
        <delete dir="${hotcopy-root}" unless="${property::exists('keep-hotcopy') and string::trim(string::to-lower(keep-hotcopy))=='true'}"/>
        <echo file="${subnant-output}" append="true" message="${string::pad-right('Backup complete',60,' ')}(${subnant::get-elapsed-time(backup-started,datetime::now())})"/>
    </target>

    <target name="init">
        <property name="backup-started" value="${datetime::now()}"/>
        <tstamp property="hotcopy-date" pattern="yyyyMMdd-HHmmss-ffff"/>
        <property name="hotcopy-root" value="${path::combine(path::combine(path::get-temp-path(),'subnant-hotcopy'),hotcopy-date)}"
             unless="${property::exists('hotcopy-root')}"/>
        <mkdir dir="${hotcopy-root}" unless="${directory::exists(hotcopy-root)}"/>
        <!-- Take a copy of repos as repos is used down the chain (verify, dump) -->
        <property name="backup-repos" value="${repos}"/>
    </target>

    <target name="help">
        <echo level="Warning">
            <![CDATA[backup: usage: subnant backup [-D:option=value]

Backup repositories using svnadmin hotcopy to copy repository
into (temporary) location, then verify and dump into dump-root

If repos not set, all repositories under svn-root are backed up

Options:
repos           comma separated list of repositories
hotcopy-root    root location of hotcopied repositories
dump-root       repository dump root directory
svn-root        repository root directory
svn-bindir      Subversion binary directory
keep-hotcopy    set true to keep hotcopied repositories
sendmail        set true to email result

Examples:
subnant backup
subnant backup -D:repos=repo1,repo2
subnant backup -D:dump-root=/svnroot/dumps
            ]]>
        </echo>
    </target>
   
</project>