<?xml version="1.0" ?>
<!--
Copyright (C) 2005 Simon McKenna

Licensed under the GNU General Public License
http://www.gnu.org/copyleft/gpl.html

$Id$ 
-->
<project name="migrate" default="migrate">

    <target name="migrate" depends="init">
        <foreach item="String" delim="," in="${migrate-repos}" property="repos">
            <nant buildfile="verify.build" target="verify"/>
            <nant buildfile="dump.build"   target="dump"/>
            <nant buildfile="create.build" target="create">
                <properties>
                    <property name="svn-root"   value="${to-svn-root}"/>
                    <property name="svn-bindir" value="${to-svn-bindir}"/>
                </properties>
            </nant>
            <nant buildfile="load.build" target="load">
                <properties>
                    <property name="dumps"      value="${repos}.dump"/>
                    <property name="svn-root"   value="${to-svn-root}"/>
                    <property name="svn-bindir" value="${to-svn-bindir}"/>
                </properties>
            </nant>
            <nant buildfile="verify.build" target="verify">
                <properties>
                    <property name="svn-root"   value="${to-svn-root}"/>
                    <property name="svn-bindir" value="${to-svn-bindir}"/>
                </properties>
            </nant>
        </foreach>
        <echo message="${string::pad-right('Migration complete',60,' ')}(${subnant::get-elapsed-time(migration-started)})" file="${subnant-output}" append="true"/>
     </target>

    <target name="init">
        <property name="migration-started" value="${datetime::get-ticks(datetime(now())}"/>
        <fail message="to-svn-root not set" unless="${property::exists('to-svn-root')}"/>
        <fail message="to-svn-root doesn't exist: ${to-svn-root}" unless="${directory::exists(to-svn-root)}"/>
        <!-- Use default svn-bindir unless specifed, then verify it exists -->
        <property name="to-svn-bindir" value="${svn-bindir}" unless="${property::exists('to-svn-bindir')}"/>
        <fail message="to-svn-bindir doesn't exist: ${to-svn-bindir}" unless="${directory::exists(to-svn-bindir)}"/>
        <!-- Take a copy of repos as repos is used down the chain (create,load,verify) -->
        <property name="migrate-repos" value="${repos}"/>
    </target>

    <target name="help">
        <echo level="Warning">
            <![CDATA[migrate: usage: subnant migrate -D:to-svn-root=</path/to-svn-root> [-D:<option>=<value>]

Migrate repositories from one location to another using
Subnant targets: backup (hotcopy,dump,verify), create, load and verify

Source repositories are not removed unless delete-source is set true

All options that apply to Subnant targets called by migrate can also
be passed through, see help in relevant target for more details

Required:   
to-svn-root     destination repository root directory

Options:
repos           comma separated list of repositories to move *
svn-root        repository root directory used for backup **
svn-bindir      subversion binary directory used for backup **
to-svn-bindir   subversion binary directory used for create,load,verify
delete-source   set true to remove source repositories after migrate

*  If repos option not set, all repositories under svn-root are migrated
** If option not set, default value in subnant.config is used

Examples:
subnant migrate -D:to-svn-root=/svn2root/repos
subnant migrate -D:to-svn-root=/svn2root/repos -D:repos=repo1,repo2
subnant migrate -D:to-svn-root=/svn2root/repos -D:to-svn-bindir=/svn2/bin
]]>
        </echo>
    </target>

</project>