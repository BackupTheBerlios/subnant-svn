<?xml version="1.0" ?>
<!--
Copyright (C) 2005 Simon McKenna

Licensed under the GNU General Public License
http://www.gnu.org/copyleft/gpl.html

$Id$ 
-->
<project name="migrate" default="migrate">

    <target name="migrate" depends="init">
        <foreach item="String" delim="," in="${migrate-repos}" property="repo">
            <nant buildfile="verify.build" target="verify">
                <properties>
                    <property name="verify-repos" value="${repo}"/>
                </properties>
            </nant>
            <nant buildfile="dump.build" target="dump">
                <properties>
                    <property name="dump-repos" value="${repo}"/>   
                    <property name="compress"   value="false"/>   
                </properties>
            </nant>
            <nant buildfile="create.build" target="create">
                <properties>
                    <property name="create-repos" value="${repo}"/>   
                    <property name="svn-root"     value="${to-svn-root}"/>
                    <property name="svn-bindir"   value="${to-svn-bindir}"/>
                </properties>
            </nant>
            <nant buildfile="load.build" target="load">
                <properties>
                    <property name="load-dumps" value="${repo}.dump"/>
                    <property name="svn-root"   value="${to-svn-root}"/>
                    <property name="svn-bindir" value="${to-svn-bindir}"/>
                </properties>
            </nant>
            <nant buildfile="verify.build" target="verify">
                <properties>
                    <property name="verify-repos" value="${repo}"/>
                    <property name="svn-root"     value="${to-svn-root}"/>
                    <property name="svn-bindir"   value="${to-svn-bindir}"/>
                </properties>
            </nant>
            <echo message="::TODO:: Copy existing hooks from old repos into new repos (overwrite default hooks)" level="Warning"/>
            <echo message="::TODO:: Delete source repository if requested" level="Warning"/>
            <property name="migrate-count" value="${int::parse(migrate-count)+1}"/>   
        </foreach>
        <log-echo message="${string::pad-right('Migrated '+migrate-count+' repositories',60,' ')}(${subnant::format-elapsed-time(migrate-started, true)})" file="${subnant-output}"/>
     </target>

    <target name="init">
        <property name="migrate-started" value="${datetime::get-ticks(datetime::now())}"/>
        <property name="to-svn-bindir"   value="${svn-bindir}" unless="${property::exists('to-svn-bindir')}"/>
        <property name="migrate-repos"   value="${repos}"      unless="${property::exists('migrate-repos')}"/>
        <property name="migrate-count"   value="0"/>
        <fail message="to-svn-root not set"                           unless="${property::exists('to-svn-root')}"/>
        <fail message="to-svn-root doesn't exist: ${to-svn-root}"     unless="${directory::exists(to-svn-root)}"/>
        <fail message="to-svn-bindir doesn't exist: ${to-svn-bindir}" unless="${directory::exists(to-svn-bindir)}"/>
    </target>

    <target name="help">
        <echo level="Warning">
            <![CDATA[migrate:

Usage: subnant migrate -D:to-svn-root=</path/to-svn-root> [-D:<option>=<value>]

Purpose: Migrate some or all repositories by chaining Subnant targets:
verify -> dump -> create -> load -> verify

Source repositories are not removed unless delete-source is set true

Nearly all options that apply to Subnant targets called by migrate can also be
passed through, see help in relevant target for more details, the exceptions
are the compress option for the dump target, and the dumps option for the load
target, which are hard-coded in migrate

Required:   
to-svn-root     destination repository root directory

Options:
repos           comma separated list of repositories to move *
svn-root        repository root directory used for verify,dump (source) **
svn-bindir      subversion binary directory used for verify,dump (source) **
to-svn-bindir   subversion binary directory used for create,load,verify (dest)
delete-source   set true to remove source repositories after migrate

*  If repos option not set, all repositories under svn-root are migrated
** If option not set, default value in subnant.config is used

Examples:
subnant migrate -D:to-svn-root=/svn2root/repos
subnant migrate -D:to-svn-root=/svn2root/repos -D:repos=repo1,repo2
subnant migrate -D:to-svn-root=/svn2root/repos -D:to-svn-bindir=/svn2/bin
]]>
        </echo>
    </target>

</project>